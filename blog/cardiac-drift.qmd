---
title: "Modelling Cardia Drift"
---

```{r}
#| echo: false
suppressMessages(library(tidyverse))
url <- "https://github.com/aaronzpearson/midsprint-blog-data/raw/main/2017_01_31_18_36_44.csv"

suppressMessages(gps_data <- read_csv(url))
```



**Using Linear Regressions to Model Cardia Drift Using GPS Data**

## Tracking Heart Rate

Smart watches provide a somple method to track your heart rate throughout your day. Heart rate can provide feedback on sleep quality, training readiness, and overall recovery rates.

Endurance athletes also use heart rate to estimate their max aerobic capacity (VO2max) and training intensity levels. During extended training sessions, there is an upward trend in athletes’ heart rate while working at the same intensities. This phenomenon is called **cardiac drift**.

### Cardiac Drift

The upward trend in an athlete’s heart rate is multifactorial. The primary causes are dehydration and accumulation of metabolites.

Dehydration decreases blood plasma levels which forces the heart to work harder to deliver the necessary blood supply to the working muscles. The decreased blood plasma levels also affects the ability for the blood to accept metabolites that accumulate in working muscles.

To contract, muscles require energy. Endurance athletes predominantly rely on aerobic energy sources like carbohydrates and fat. The breakdown of these energy sources releases by-products that interfere with how efficient the muscle can contract. Therefore, it is important for these by-products to be expelled from the muscle cells. As water levels in the blood diminish, there is less drive for these by-products to exit the cell. Instead, they interfere with the mechanisms in the muscle cell that allow it to contract. This results in less forceful contractions and slower speeds.

When an athlete wants to maintain a given pace, they need to overcome these by-products. To do so, they heart increases its pace to deliver more energy to the muscles and maintain the needed amount of force.

### Load the packages

```{r}
#| eval: false
library(tidyverse) # for tidy code
```

## Load the Data

The data is available on my GitHub repository and can be downloaded using the code below. 

```{r}
#| eval: false
url <- "https://github.com/aaronzpearson/midsprint-blog-data/raw/main/2017_01_31_18_36_44.csv"

gps_data <- read_csv(url)
```

The data structure:

```{r}
summary(gps_data)
```

## Cleaning the Data

To clean the data, we'll remove when the athlete did not record any data. 

```{r}
gps_data <- gps_data %>% # write over initial data set
                         # not often recommended, but safe in this case
    filter(
        power > 0, # only keep data when the athlete was working
        hr > 0 # remove data where the hr monitor was not being worn
        )
```

## Visualizing the Data

Plotting heart rate and power versus time.

```{r}
options(repr.plot.width = 14, repr.plot.height = 8) # set plot size

theme_set(theme_minimal()) # set the global theme

ggplot(gps_data, aes(x = secs)) + # only set x-axis because of 2 dependent variables
    geom_point(aes(y = power), color = "black") + 
    geom_point(aes(y = hr), colour = "red") + 
    xlab("Time (s)") + ylab("Power (W), Heart Rate (bpm)") 
```


## The Linear Model

Below is some code to visualize an athlete’s increase in heart-rate while working at nearly the same rate for 45 minutes.

```{r}
fit <- lm(hr ~ power:secs, data = gps_data) # only includes power-time interaction term

summary(fit) # overview of model fit
```

Although the goodness-of-fit isn't great (r^2: 0.33, RSE: 8.43), it is inconsequential for the rest of the example.

We can add the fitted model to the current data set and then visualize the outputs. 

```{r}
gps_data$fitted <- fitted(fit)
```

Below, you'll note that the fitted model is not linear. This is because of the interaction between power and time. That is, when there is a spike in the interaction term, we'd anticipate a spike in heart rate as well.

If we did not include the interaction term and only included time, the model would be linear. This is seen in the green line that is fit using `geom_smooth` and the `secs` variable.

```{r}
#| message: false
ggplot(gps_data, aes(x = secs)) + # only set x-axis because of 2 dependent variables
    geom_point(aes(y = power), color = "black") + 
    geom_point(aes(y = hr), colour = "red") + 
    geom_point(aes(y = fitted), colour = "blue") + # fitted values
    geom_smooth(aes(y = hr), colour = "green", size = 0.5, method = "lm") + # uses "lm" (linear model) to fit trendline
    xlab("Time (s)") + ylab("Power (W), Heart Rate (bpm)")
```

## Predicted Outcomes

Using some quick math, we can estimate the athlete's heart rate, Since there are spikes in power output, we'll e conservative and use its 75th percentile.

```{r}
quantile(gps_data$power); quantile(gps_data$secs)
```

Manually calculating the athlete's fitted heart rate 3/4 through the race results in an increase of `r round(217 * 2914.75 * 0.00002522, 0)` which results in an increase from 169 to approximately 184 beats per minute while the athlete works at 217 kW. 

In the end, we see that the athlete’s heart rate is expected to increase by 16 beats per minute after 45-50 minutes of sustained exercise.

## Application

This information can be applied to the critical velocity model. The external expression of an increase in heart rate is the decrease in an athlete’s critical velocity. As such, we should expect to see that the athlete either relies more on anaerobic energy over time to sustain a given pace or that their pace decreases to maximize their use of aerobic energy.
